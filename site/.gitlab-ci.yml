image: nixos/nix:latest
variables:
  NIX_PATH: 'nixpkgs=channel:nixos-unstable'
  NIX_CONFIG: 'experimental-features = nix-command flakes'

stages:
  - build
  - deploy

.rules: &rules
  # NÃ£o rodar pipeline pro push na branch se tiver um MR aberto nela (pipeline duplicado)
  - if: '$CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS'
    when: never
  - if: $CI_COMMIT_REF_NAME == 'main'
    variables:
      BASEURL: ''
      ENV_NAME: 'production'
      ENV_URL: 'gelos.club'
  - if: $CI_COMMIT_REF_NAME != 'main'
    variables:
      BASEURL: '$CI_COMMIT_REF_NAME'
      ENV_NAME: 'review/$CI_COMMIT_REF_NAME'
      ENV_URL: 'review.gelos.club'

build:
  stage: build
  rules:
    - *rules
  script:
    - 'echo "baseurl: $BASEURL" >> _config.yml'
    - nix build
    - tar -C result/public -cvz . > site.tar.gz
  artifacts:
    name: '$ENV_NAME'
    paths:
      - site.tar.gz
    expire_in: 5 days

deploy:
  stage: deploy
  rules:
    - *rules
  environment:
    name: '$ENV_NAME'
    url: 'https://$ENV_URL/$BASEURL'
  before_script:
    - 'nix profile install nixpkgs#hut'
  script:
    - hut --config $SOURCEHUT_OAUTH pages publish -d $ENV_URL -s "/$BASEURL" --not-found "/404.html" site.tar.gz
